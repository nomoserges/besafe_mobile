{"version":3,"sources":["webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.page.html","webpack:///./src/app/home/home.page.scss","webpack:///./src/app/home/home.page.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HomePage } from './home.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [HomePage]\r\n})\r\nexport class HomePageModule {}\r\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar color=\\\"primary\\\">\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n      <ion-title>\\r\\n        BeSAFE\\r\\n      </ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n  \\r\\n  <ion-content>\\r\\n      <ion-card class=\\\"welcome-card\\\">\\r\\n        <ion-img src=\\\"/assets/images/taxi-vairified.jpg\\\"></ion-img>\\r\\n        <ion-card-content>\\r\\n          <p>Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les années 1500.</p>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n      <ion-list lines=\\\"none\\\">\\r\\n        <ion-item (click) = \\\"StartScanning()\\\">\\r\\n          <ion-icon slot=\\\"start\\\" color=\\\"primary\\\" name=\\\"book\\\"></ion-icon>\\r\\n          <ion-label>Scan passager</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item routerLink='/menuemploye'>\\r\\n          <ion-icon slot=\\\"start\\\" color=\\\"primary\\\" name=\\\"build\\\"></ion-icon>\\r\\n          <ion-label>Scan chauffeur</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n  </ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\nimport { Dialogs } from '@ionic-native/dialogs/ngx';\r\nimport { QRScanner, QRScannerStatus } from '@ionic-native/qr-scanner/ngx';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.page.html',\r\n  styleUrls: ['./home.page.scss'],\r\n})\r\nexport class HomePage implements OnInit {\r\n  qrScan : any;\r\n  constructor(\r\n    private authService   : AuthService,\r\n    private router        : Router,\r\n    public platform       : Platform,\r\n    public dialogs        : Dialogs,\r\n    public qr             : QRScanner) { \r\n      //  We disable scanning when back button is pressed\r\n      this.platform.backButton.subscribeWithPriority(0, ()=>{\r\n        document.getElementsByTagName(\"body\")[0].style.opacity = \"1\";\r\n        this.qrScan.unsubscribe();\r\n      });\r\n     }\r\n\r\n  ngOnInit() {\r\n    var loginState: any;\r\n    loginState = this.authService.isLoggedIn();\r\n    loginState.then((val) => {\r\n      if (val === null || val === undefined) {\r\n        this.router.navigateByUrl('login');\r\n      }\r\n    });\r\n  }\r\n\r\n  StartScanning () {\r\n    this.qr.prepare().then((status:QRScannerStatus)=>{\r\n      if (status.authorized) {\r\n        this.qr.show();\r\n        document.getElementsByTagName(\"body\")[0].style.opacity = \"0\";\r\n        this.qrScan = this.qr.scan().subscribe((textFound)=>{\r\n          document.getElementsByTagName(\"body\")[0].style.opacity = \"1\";\r\n          this.qrScan.unsubscribe();\r\n          this.dialogs.alert(textFound);\r\n        }, (err)=>{\r\n          this.dialogs.alert(JSON.stringify(err));\r\n        })\r\n      } else if (status.denied) {\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}